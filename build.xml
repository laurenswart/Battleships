
<project name="ProjetInfo">

	<property name="main.build.dir" value="code/build"/>
	<property name="main.src.dir" value="code/src"/>
	<property name="test.build.dir" value="code/build"/>
	<property name="test.src.dir" value="code/src"/>

	<path id="classpath.test">
		<pathelement location="code\lib\junit-4.12.jar"/>
		<pathelement location="code\lib\hamcrest-core-1.3.jar"/>
		<pathelement location="${main.build.dir}"/>
	</path>


    <target name="clean">
        <!--supprimer dossier nommé build-->
        <delete dir="code/build"/>
    
    </target>

    <target name="build">
        <!--creer fichier nommé build-->
        <mkdir dir="code\build"/>
        
        <!--donne le nom du dossier contenant les fichiers.java(´.´)
        et nom du dossier où mettre les .class (´build´)-->
        <javac includeantruntime="false" 
			srcdir="${main.src.dir}"
			destdir="${main.build.dir}"
			classpath="code\lib\junit-4.12.jar:code\lib\jfxrt.jar">
		</javac>
    </target>
    

    
    <target name="run" depends="build">
        <java classname="be.ac.umons.project.Mains.Main"
            classpath="code/build:code/lib/jfxrt.jar"/>
    </target>



    <target name="test" depends="build">
		<junit printsummary="on" haltonfailure="yes" fork="true">

			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${test.build.dir}"/>
			</classpath>

			<formatter type="plain" usefile="false" />

			<batchtest>
				<fileset dir="${test.src.dir}" includes="**/*Test.java" />
			</batchtest>

		</junit>
	</target>



    <target name="stat" depends="build">
		<java classname="be.ac.umons.project.Mains.MainStat" fork="true">
				<arg line="${args}"/>
				<classpath>
					<pathelement location="${main.build.dir}:code/lib/jfxrt.jar"/>
					<pathelement path="${main.build.dir}"/>
				</classpath>
		</java>
    </target>

</project>
